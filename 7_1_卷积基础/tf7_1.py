#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sat Feb  9 23:24:54 2019

@author: yaoxinzhi
"""

'''
全连接NN 每个神经元与前后相邻层的每个神经元都有连接关系 输入是特征 输出为预测的结果

待优化参数个数 sum(前层 * 后层 + 后层)
待优化的参数过多容易导致模型过拟合

避免过拟合 --> 原始图片特征提取 再将特征喂给全连接网络

卷积 一种有效提取图像特征的方法
5*5*1 5*5表示分辨率 1表示单通道
输出图片边长 = （输入图片边长 - 卷积核长 + 1）/步长

全零填充 保证输出图片尺寸与输入图片尺寸一致 padding 输出边长 = 输入边长/步长
padding = 'SAME' or padding = 'VALID'

tf 计算卷积
tf.nn.conv2d(输入描述, eg.[batch, 5, 5, 1], # 一次喂入图片数 分辨率 通道数 灰度图为1 彩色图为3
             卷积核描述, eg.[3, 3, 1, 16], # 行列分辨率 通道数=输入图片通道数 核个数(输出深度为16 及输出图片16通道)
             核滑动步长, eg.[1, 1, 1, 1], # 第一和第四个参数固定为1 第二个参数行步长 第三个参数列步长
             padding = 'VALID')

多通道图片 3*3*3卷积核

池化 减少特征数量
最大池化可以提取图片纹理
pool = tf.nn.max_pool(输入描述，
                      池化核描述，
                      池化核滑动步长，
                      padding)
均值池化可以保留背景特征
pool = tf.nn.avg_pool()

舍弃 在训练时舍弃以一定概率暂时舍弃神经元 减少过拟合 加快训练速度
只在训练时舍弃 测试时全部使用
tf.nn.dropout(上层输出， 暂时舍弃的概率)
if train: 输出 = tf.nn.dropout(上层输出，暂时舍弃的概率)

CNN主要模块
特征提取 卷积 激活 池化
全连接
'''